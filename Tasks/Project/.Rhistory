boring_function <- function(x)
x
submit()
boring_function <- function(x) {x}
submit()
boring_function <- function(x) x
submit()
boring_function <- function(x)
submit()
boring_function <- function(x){
submit()
boring_function <- function(x){x}
submit()
submit()
boring_function <- function(x){x}
submit
submit()
boring_function.R <- function(x){x}
submit()
test_func()
submit()
1
1
0
0
demo()
swirl()
swirl()
lobster_wide<-reshape(lobster,idvar=c("ID","Site"),timevar="Locus",direction="wide",sep="")
colnames(lobster_wide)<-gsub("Genotype","",colnames(lobster_wide))
library (adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster<-read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide<-reshape(lobster,idvar=c("ID","Site"),timevar="Locus",direction="wide",sep="")
colnames(lobster_wide)<-gsub("Genotype","",colnames(lobster_wide))
snpgeno<-lobster_wide[,3:ncol(lobster_wide)]
snps_to_remove<-c("25580","32362","41521","53889","65376","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
library (adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster<-read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide<-reshape(lobster,idvar=c("ID","Site"),timevar="Locus",direction="wide",sep="")
colnames(lobster_wide)<-gsub("Genotype","",colnames(lobster_wide))
snpgeno<-lobster_wide[,3:ncol(lobster_wide)]
snps_to_remove<-c("25580","32362","41521","53889","65376","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
snpsgeno<-snpgeno[,!colnames(snpgeno)%in%snps_to_remove]
ind<-as.character(lobster_wide$ID)
site<-as.character(lobster_wide$Site)
lobster_gen<-missingno(lobster_gen,type="geno",cutoff=0.20)
lobster_gen<-df2genind(snpgeno,ploidy=2,ind.names=ind,pop=site,sep"")
lobster_gen<-df2genind(snpgeno,ploidy=2,ind.names=ind,pop=site,sep"")
ind<-as.character(lobster_wide$ID)
site<-as.character(lobster_wide$Site)
lobster_gen<-df2genind(snpgeno,ploidy=2,ind.names =ind,pop=site,sep="")
lobster_gen<-missingno(lobster_gen,type="geno",cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for(i in dups_lobster){
if(length(dups_lobster[i])>1){
lob_dups[x]<-i
x<-x+1
}
}
for(i in dups_lobster){
if(length(dups_lobster[i])>1){
lob_dups[x]<-i
x<-x+1
}
}
if(length(dups_lobster[i])>1){
lob_dups[x]<-i
x<-x+1
}
lob_dups[x]<-i
x<-x+1
if(length(dups_lobster[i])>1){
lob_dups[x]<-i
x<-x+1
}
for(i in dups_lobster){
if(length(dups_lobster[i])>1){
lob_dups[x]<-i
x<-x+1
}
}
lob_Nodups<-indNames(lobster_gen)[!indNames(lobster_gen)%in%lob_dups]
lobster_gen<-lobster_gen[lob_Nodups,]
summary(lobster_gen$pop)
basic_lobster<-basic.stats(lobster_gen,diploid=TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
He_lobster<-round(apply(basic_lobster$Hs,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
par(mar=c(4,4,1,1),las=1,mgp=c(2,0.25,0),tck=-0.005,cex.lab=1.15)
plot(He_lobster,Ho_lobster,xlab="expected H",ylab="observed H",pch=21,bg="gray",xlim=c(0.32,0.405),ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster),lty=2,lwd=1.25,col='red')
Fis<-apply(basic_lobster$Fis,MARGIN=2,FUN=mean,na.rm=TRUE)
lobster_gen_sub<-popsub(lobster_gen,sublist=c("Ale","Ber","Brd","Pad","Sar17","Vig"))
lobster_fst<-genet.dist(lobster_gen_sub,method="WC84")%>%round(digits=3)
lab_order<-c("Ber","Brd","Pad","Vig","Sar17","Ale")
fst.mat<-as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2<-fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2),arr.ind=TRUE)
fst.df<-data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]],
Site2=dimnames(fst.mat2)[[1]][ind[,1]],
Fst=fst.mat2[ind])
fst.df$Site1<-factor(fst.df$Site1,levels=unique(fst.df$Site1))
fst.df$Site2<-factor(fst.df$Site2,levels=unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst<0]<-0
mid<-max(fst.df$Fst)/2
lobster_wide<-reshape(lobster,idvar=c("ID","Site"),timevar="Locus",direction="wide",sep="")
colnames(lobster_wide)<-gsub("Genotype","",colnames(lobster_wide))
snpgeno<-lobster_wide[,3:ncol(lobster_wide)]
snps_to_remove<-c("25580","32362","41521","53889","65376","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
snpsgeno<-snpgeno[,!colnames(snpgeno)%in%snps_to_remove]
ind<-as.character(lobster_wide$ID)
site<-as.character(lobster_wide$Site)
lobster_gen<-df2genind(snpgeno,ploidy=2,ind.names =ind,pop=site,sep="")
lobster_gen<-missingno(lobster_gen,type="geno",cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for(i in dups_lobster){
if(length(dups_lobster[i])>1){
lob_dups[x]<-i
x<-x+1
}
}
lob_Nodups<-indNames(lobster_gen)[!indNames(lobster_gen)%in%lob_dups]
lobster_gen<-lobster_gen[lob_Nodups,]
summary(lobster_gen$pop)
basic_lobster<-basic.stats(lobster_gen,diploid=TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
He_lobster<-round(apply(basic_lobster$Hs,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
par(mar=c(4,4,1,1),las=1,mgp=c(2,0.25,0),tck=-0.005,cex.lab=1.15)
plot(He_lobster,Ho_lobster,xlab="expected H",ylab="observed H",pch=21,bg="gray",xlim=c(0.32,0.405),ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster),lty=2,lwd=1.25,col='red')
Fis<-apply(basic_lobster$Fis,MARGIN=2,FUN=mean,na.rm=TRUE)
lobster_gen_sub<-popsub(lobster_gen,sublist=c("Ale","Ber","Brd","Pad","Sar17","Vig"))
lobster_fst<-genet.dist(lobster_gen_sub,method="WC84")%>%round(digits=3)
lab_order<-c("Ber","Brd","Pad","Vig","Sar17","Ale")
fst.mat<-as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2<-fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2),arr.ind=TRUE)
fst.df<-data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]],
Site2=dimnames(fst.mat2)[[1]][ind[,1]],
Fst=fst.mat2[ind])
fst.df$Site1<-factor(fst.df$Site1,levels=unique(fst.df$Site1))
fst.df$Site2<-factor(fst.df$Site2,levels=unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst<0]<-0
mid<-max(fst.df$Fst)/2
fst.label<-expression(italic("F"),[ST])
fst.label<-expression(italic("F")[ST])
mid<-max(fst.df$Fst)/2
ggplot(data=fst.df,aes(x=Site1,y=Site2,fill=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_black(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
ggplot(data=fst.df,aes(x=Site1,y=Site2,fill=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
#Extra credit
library(coala)
#Extra credit
library(coala)
library (adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster<-read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide<-reshape(lobster,idvar=c("ID","Site"),timevar="Locus",direction="wide",sep="")
colnames(lobster_wide)<-gsub("Genotype","",colnames(lobster_wide))
snpgeno<-lobster_wide[,3:ncol(lobster_wide)]
snps_to_remove<-c("25580","32362","41521","53889","65376","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
snpsgeno<-snpgeno[,!colnames(snpgeno)%in%snps_to_remove]
ind<-as.character(lobster_wide$ID)
site<-as.character(lobster_wide$Site)
lobster_gen<-df2genind(snpgeno,ploidy=2,ind.names =ind,pop=site,sep="")
lobster_gen<-missingno(lobster_gen,type="geno",cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for(i in dups_lobster){
if(length(dups_lobster[i])>1){
lob_dups[x]<-i
x<-x+1
}
}
lob_Nodups<-indNames(lobster_gen)[!indNames(lobster_gen)%in%lob_dups]
lobster_gen<-lobster_gen[lob_Nodups,]
summary(lobster_gen$pop)
basic_lobster<-basic.stats(lobster_gen,diploid=TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
He_lobster<-round(apply(basic_lobster$Hs,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
#Extra credit
install.packages("coala")
#Extra credit
install.packages("coala")
#Extra credit
install.packages("coala")
install.packages("coala")
setwd('~/Desktop/Evolution/Tasks/Task_04')
library (adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster<-read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide<-reshape(lobster,idvar=c("ID","Site"),timevar="Locus",direction="wide",sep="")
colnames(lobster_wide)<-gsub("Genotype","",colnames(lobster_wide))
snpgeno<-lobster_wide[,3:ncol(lobster_wide)]
snps_to_remove<-c("25580","32362","41521","53889","65376","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
snpsgeno<-snpgeno[,!colnames(snpgeno)%in%snps_to_remove]
ind<-as.character(lobster_wide$ID)
site<-as.character(lobster_wide$Site)
lobster_gen<-df2genind(snpgeno,ploidy=2,ind.names =ind,pop=site,sep="")
lobster_gen<-missingno(lobster_gen,type="geno",cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for(i in dups_lobster){
if(length(dups_lobster[i])>1){
lob_dups[x]<-i
x<-x+1
}
}
lob_Nodups<-indNames(lobster_gen)[!indNames(lobster_gen)%in%lob_dups]
lobster_gen<-lobster_gen[lob_Nodups,]
summary(lobster_gen$pop)
basic_lobster<-basic.stats(lobster_gen,diploid=TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
He_lobster<-round(apply(basic_lobster$Hs,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
par(mar=c(4,4,1,1),las=1,mgp=c(2,0.25,0),tck=-0.005,cex.lab=1.15)
plot(He_lobster,Ho_lobster,xlab="expected H",ylab="observed H",pch=21,bg="gray",xlim=c(0.32,0.405),ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster),lty=2,lwd=1.25,col='red')
Fis<-apply(basic_lobster$Fis,MARGIN=2,FUN=mean,na.rm=TRUE)
lobster_gen_sub<-popsub(lobster_gen,sublist=c("Ale","Ber","Brd","Pad","Sar17","Vig"))
lobster_fst<-genet.dist(lobster_gen_sub,method="WC84")%>%round(digits=3)
lab_order<-c("Ber","Brd","Pad","Vig","Sar17","Ale")
fst.mat<-as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2<-fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2),arr.ind=TRUE)
fst.df<-data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]],
Site2=dimnames(fst.mat2)[[1]][ind[,1]],
Fst=fst.mat2[ind])
fst.df$Site1<-factor(fst.df$Site1,levels=unique(fst.df$Site1))
fst.df$Site2<-factor(fst.df$Site2,levels=unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst<0]<-0
fst.label<-expression(italic("F")[ST])
mid<-max(fst.df$Fst)/2
pdf("005_plot01.pdf")
par(mar=c(4,4,1,1),las=1,mgp=c(2,0.25,0),tck=-0.005,cex.lab=1.15)
plot(He_lobster,Ho_lobster,xlab="expected H",ylab="observed H",pch=21,bg="gray",xlim=c(0.32,0.405),ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster),lty=2,lwd=1.25,col='red')
dev.off()
setwd('~/Desktop/Evolution/Tasks/Task_05')
pdf("005_plot01.pdf")
par(mar=c(4,4,1,1),las=1,mgp=c(2,0.25,0),tck=-0.005,cex.lab=1.15)
plot(He_lobster,Ho_lobster,xlab="expected H",ylab="observed H",pch=21,bg="gray",xlim=c(0.32,0.405),ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster),lty=2,lwd=1.25,col='red')
dev.off()
pdf("005_plot02.pdf")
ggplot(data=fst.df,aes(x=Site1,y=Site2,fill=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
dev.off()
install.packages(LearnPopGen)
install.packages(learnPopGen)
library(learnGenPop)
install.packages(learnPopGen)
library(learnPopGen)
coalescent.plot()
pdf("005_learnpopgen1.pdf")
coalescent.plot()
dev.off()
pdf("005_learnpopgen2.pdf")
coalescent.plot()
dev.off()
pdf("005_learnpopgen3.pdf")
coalescent.plot()
dev.off()
#Extra credit
install.packages(coala)
setwd('~/Desktop/Evolution/Tasks/Project')
barn owl<-read.csv("barn owl.csv")
my_data <- read.table(file="clipboard",
sep="\t", header=TRUE)
my_data <- read.table(pipe("pbpaste"), sep="\t", header=TRUE)
head(my_data)
View(my_data)
View(my_data)
setwd('~/Desktop/Evolution/Tasks/Task_06')
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/sinFxn.R")
s<-apply(overallFreq,2,function(x) lines(overallFreq[,1],x,col=rgb(0,0,0,0.01)))
setwd('~/Desktop/Evolution/Tasks/Task_06')
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/sinFxn.R")
rescaleFreq<-apply(overallFreq[,3:ncol(overallFreq)],2,function(x) x-x[1])
setwd('~/Desktop/Evolution/Tasks/Task_06')
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
plot(1,1,type="n",xlin=c(1998,2013),ylim=c(0,1))
s<-apply(overallFreq,2,function(x) lines(overallFreq[,1],x,col=rgb(0,0,0,0.01)))
rescaleFreq<-apply(overallFreq[,3:ncol(overallFreq)],2,function(x) x-x[1])
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
plot(1,1,type="n",xlin=c(1998,2013),ylim=c(0,1))
s<-apply(overallFreq,2,function(x) lines(overallFreq[,1],x,col=rgb(0,0,0,0.01)))
rescaleFreq<-apply(overallFreq[,3:ncol(overallFreq)],2,function(x) x-x[1])
plot(1,1,type="n",xlim=c(1998,2013),ylim=c(-0.25,0.25))
s<-apply(rescaleFreq,2,function(x)lines(overallFreq[,1],x,col=rgb(0,0,0,0.01)))
dYear<-c()
dAlleles<-c()
Vec<-overallFreq[,i]
Init<-overallFreq[1,i]}
for(i in 3:ncol(overallFreq)){
dYear<-c(dYear,overallFreq[,1])
Vec<-overallFreq[,i]
Init<-overallFreq[1,i]
dAlleles<-c(dAlleles,Vec-Init)
}
smoothScatter(dYear,dAlleles,colramp=Pal,nbin=100)
smoothScatter(dYear,dAlleles,colramp=Pal,nbin=10)
smoothScatter(dYear,dAlleles,colramp=Pal,nbin=100)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=100,ngens=18,startT=1997,simCol="gray40",rescale=TRUE)
plot(alleleFreqs$d_freq,alleleFreqs$d_imm,xlim=c(-0.15,0.15),xlab="overall freq. change",yalb="freq. change in subset")
points(alleleFreqs$d_freq,alleleFreqs$d_birth,col='blue')
points(alleleFreqs$d_freq,alleleFreqs$d_surv,col='red')
plot(alleleFreqs$d_freq,alleleFreqs$d_imm,xlim=c(-0.15,0.15),xlab="overall freq. change",ylab="freq. change in subset")
points(alleleFreqs$d_freq,alleleFreqs$d_birth,col='blue')
points(alleleFreqs$d_freq,alleleFreqs$d_surv,col='red')
smoothScatter(dYear,dAlleles,colramp=Pal,nbin=100)
View(alleleFreqs)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=200,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
addFit(nruns=50,n=250,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=150,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=225,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=250,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=275,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=325,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=300,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=285,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=275,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=310,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=325,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=335,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=330,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=328,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=332,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=0)
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=340,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=1)
pdf("006_plot_340n0h00s.pdf")
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=340,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=1)
dev.off()
pdf("006_plot_340n0h00s.pdf")
smoothScatter(dYear, dAlleles,colramp=Pal,nbin=100,xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns=50,n=330,ngens=18,startT=1997,simCol="gray40",rescale=TRUE,s=0,h=1)
dev.off()
setwd('~/Desktop/Evolution/Tasks/Project')
my_data <- read.table(pipe("pbpaste"), sep="\t", header=TRUE)
head(my_data)
my_data
setwd('~/Desktop/Evolution/Tasks/Project')
barn.owls<- read.csv("~/Desktop/Evolution/Tasks/Project/barn owl.csv")
barn.owls
setwd('~/Desktop/Evolution/Tasks/Project')
barn.owls<- read.csv("~/Desktop/Evolution/Tasks/Project/barn owl.csv")
head(barn.owls)
range(barn.owls$Wing)
unique(barn.owls$Localitynew)
unique(barn.owls$Localitynew)
head(barn.owls)
unique(barn.owls$Lineage)
mMean <- c()
fMean <- c()
counter <- 1
for (i in c("alba", "furcata", "javanica")) {
X <- grep(i, barn.owls$Lineage)
Males <- which(barn.owls[X,"Sex"]==1)
mMean[counter] <- mean(barn.owls[X[Males],"Bill"])
Females <- which(barn.owls[X,"Sex"]==2)
fMean[counter] <- mean(barn.owls[X[Females],"Bill"])
counter <- counter + 1
}
mMean
fMean
b
barplot(cbind(mMean,fMean))
barplot(cbind(mMean,fMean), beside=T)
barplot(rbind(mMean,fMean), beside=T)
axis(side=1, at=c(1,2,3))
barplot(rbind(mMean,fMean), beside=T)
axis(side=1, at=c(2,4,6))
barplot(rbind(mMean,fMean), beside=T)
axis(side=1, at=c(2,6,8))
barplot(rbind(mMean,fMean), beside=T)
axis(side=1, at=c(2,5,8))
barplot(rbind(mMean,fMean), beside=T, col=c("orange","blue","pink"))
axis(side=1, at=c(2,5,8), labels=c("T. alba", "T. furcata", "T. javanica"))
barplot(rbind(mMean,fMean), beside=T, col=c("orange","orange","blue","blue","pink","pink"))
axis(side=1, at=c(2,5,8), labels=c("T. alba", "T. furcata", "T. javanica"))
barplot(rbind(mMean,fMean), beside=T, border=c("orange","orange","blue","blue","pink","pink"))
barplot(rbind(mMean,fMean), beside=T, border=c("orange","orange","blue","blue","pink","pink"), c("orange","white","blue","white","pink","white"))
barplot(rbind(mMean,fMean), beside=T, border=c("orange","orange","blue","blue","pink","pink"), col=c("orange","white","blue","white","pink","white"))
axis(side=1, at=c(2,5,8), labels=c("T. alba", "T. furcata", "T. javanica"))
par(mar=c(3,4,1,1), las=1)
barplot(rbind(mMean,fMean), beside=T, border=c("orange","orange","blue","blue","pink","pink"), col=c("orange","white","blue","white","pink","white"), ylim=c(0,250), ylab="Bill Length Average (cm)
par(mar=c(3,4,1,1), las=1)
barplot(rbind(mMean,fMean), beside=T, border=c("orange","orange","blue","blue","pink","pink"), col=c("orange","white","blue","white","pink","white"), ylim=c(0,250), ylab="Bill Length Average (cm)")
par(mar=c(3,4,1,1), las=1)
barplot(rbind(mMean,fMean), beside=T, border=c("orange","orange","blue","blue","pink","pink"), col=c("orange","white","blue","white","pink","white"), ylim=c(0,250), ylab="Bill Length Average (cm)")
par(mar=c(3,4,1,1), las=1)
barplot(rbind(mMean,fMean), beside=T, border=c("orange","orange","blue","blue","pink","pink"), col=c("orange","white","blue","white","pink","white"), ylim=c(0,250), ylab="Bill Length Average (cm)")
axis(side=1, at=c(2,5,8), labels=c("T. alba", "T. furcata", "T. javanica"))
mMean[1]
fMean[2]
fMean[1]
par(mar=c(3,4,1,1), las=1)
barplot(rbind(fMean,mMean), beside=T, border=c("orange","orange","blue","blue","pink","pink"), col=c("orange","white","blue","white","pink","white"), ylim=c(0,250), ylab="Bill Length Average (cm)")
axis(side=1, at=c(2,5,8), labels=c("T. alba", "T. furcata", "T. javanica"))
fMean
mMean
pdf("Project.DataAnalysis.pdf")
par(mar=c(3,4,1,1), las=1)
barplot(rbind(fMean,mMean), beside=T, border=c("orange","orange","blue","blue","pink","pink"), col=c("orange","white","blue","white","pink","white"), ylim=c(0,250), ylab="Bill Length Average (cm)")
axis(side=1, at=c(2,5,8), labels=c("T. alba", "T. furcata", "T. javanica"))
dev.off()
